<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnes_ES.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        V7gEt0tBAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnca_ES.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        V7gEt0tBAAAAAElFTkSuQmCC
</value>
  </data>
</root>